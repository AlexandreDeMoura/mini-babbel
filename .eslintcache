[{"/Users/alexandredemoura/Documents/dev/mini-babbel/src/index.tsx":"1","/Users/alexandredemoura/Documents/dev/mini-babbel/src/reportWebVitals.ts":"2","/Users/alexandredemoura/Documents/dev/mini-babbel/src/App.tsx":"3","/Users/alexandredemoura/Documents/dev/mini-babbel/src/wordLists.ts":"4","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/SessionMenu.tsx":"5","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyContainer.tsx":"6","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyMenu.tsx":"7","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyItem.tsx":"8","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/ItemModal.tsx":"9","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/items.js":"10","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/configureStore.js":"11","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/reducer.js":"12","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/themes.js":"13","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/ThemesForm.tsx":"14","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveItemList.js":"15","/Users/alexandredemoura/Documents/dev/mini-babbel/src/localStorage.js":"16","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveSentenceThemeList.js":"17","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveWordThemeList.js":"18","/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/deleteItemList.js":"19"},{"size":500,"mtime":1610989380355,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1610989380356,"results":"22","hashOfConfig":"21"},{"size":1178,"mtime":1612200790396,"results":"23","hashOfConfig":"21"},{"size":1628,"mtime":1611348305473,"results":"24","hashOfConfig":"21"},{"size":472,"mtime":1611064913416,"results":"25","hashOfConfig":"21"},{"size":2816,"mtime":1612197887772,"results":"26","hashOfConfig":"21"},{"size":1386,"mtime":1612103653565,"results":"27","hashOfConfig":"21"},{"size":2359,"mtime":1611867797996,"results":"28","hashOfConfig":"21"},{"size":6560,"mtime":1611771897458,"results":"29","hashOfConfig":"21"},{"size":3109,"mtime":1612281437777,"results":"30","hashOfConfig":"21"},{"size":1490,"mtime":1612281689009,"results":"31","hashOfConfig":"21"},{"size":201,"mtime":1611672852341,"results":"32","hashOfConfig":"21"},{"size":1579,"mtime":1612281437787,"results":"33","hashOfConfig":"21"},{"size":4757,"mtime":1611868432907,"results":"34","hashOfConfig":"21"},{"size":288,"mtime":1612213390584,"results":"35","hashOfConfig":"21"},{"size":514,"mtime":1612213227621,"results":"36","hashOfConfig":"21"},{"size":377,"mtime":1612215445462,"results":"37","hashOfConfig":"21"},{"size":337,"mtime":1612215445453,"results":"38","hashOfConfig":"21"},{"size":316,"mtime":1612281689010,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1oa0r3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexandredemoura/Documents/dev/mini-babbel/src/index.tsx",[],["84","85"],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/reportWebVitals.ts",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/App.tsx",["86"],"import React, { useState } from 'react'\nimport { Provider } from \"react-redux\"\nimport { makeStyles } from '@material-ui/core'\nimport SessionMenu from './components/SessionMenu'\nimport VocabularyContainer from './components/VocabularyContainer'\nimport VocabularyMenu from './components/VocabularyMenu'\nimport configureStore from './store/configureStore'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  sessionMenuContainer: {\n    marginBottom: 120,\n    width: 'calc(100% - 40px)',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: 20\n  }\n}))\n\nconst store = configureStore()\n\nfunction App() {\n  const classes = useStyles()\n  const [sessionInfo, setSessionInfo] = useState([\"French\", \"Korean\"])\n\n  return (\n    <Provider store={store}>\n      <main className={classes.main}>\n        <div className={classes.sessionMenuContainer}>\n          <SessionMenu sessionInfo={sessionInfo} />\n        </div>\n        <VocabularyMenu />\n        <VocabularyContainer />\n      </main>\n    </Provider>\n  )\n}\n\nexport default App\n","/Users/alexandredemoura/Documents/dev/mini-babbel/src/wordLists.ts",[],["87","88"],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/SessionMenu.tsx",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyContainer.tsx",["89"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ItemModal from './ItemModal'\nimport VocabularyItem from './VocabularyItem'\nimport { formOpened, getFormState, getItemType, getListItemByTheme, intializeItemList } from '../store/items'\nimport { getIsThemeFormOpened, getSelectedThemes, openThemeForm } from '../store/themes'\nimport ThemesForm from './ThemesForm'\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: 'relative',\n        width: '70%',\n        height: '70%',\n        border: '2px solid black',\n        overflowY: 'scroll'\n    },\n    add: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        fontSize: 40,\n        cursor: 'pointer'\n    },\n    theme: {\n        marginTop: 10,\n        position: 'absolute',\n        top: 0,\n        left: '50%',\n        transform: 'translate(-50%)',\n        padding: 10,\n        border: '2px solid black',\n        fontWeight: 500,\n        cursor: 'pointer'\n    },\n    itemsContainer: {\n        padding: 60,\n        paddingTop: 80,\n        paddingBottom: 30,\n        display: 'flex',\n        flexWrap: 'wrap',\n    }\n}))\n\nexport default function VocabularyContainer() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const themes = useSelector(getSelectedThemes)\n    const isWord = useSelector(getItemType)\n    const listOfItems = useSelector(getListItemByTheme(themes, isWord))\n    const itemForm = useSelector(getFormState)\n    const isThemeFormOpened = useSelector(getIsThemeFormOpened)\n\n    function displaySelectedThemes() {\n        let textToDisplay = ''\n\n        switch (themes.length) {\n            case 0:\n                textToDisplay = 'All'\n                break\n            case 1:\n                textToDisplay = `${themes[0]}`\n                break\n            case 2:\n                textToDisplay = `${themes[0]}, ${themes[1]}`\n                break\n            default:\n                textToDisplay = `${themes[0]}, ${themes[1]} and ${themes.length - 2} more`\n                break\n        }\n        return textToDisplay\n    }\n\n    return (\n        <div className={classes.main}>\n            <Add className={classes.add} onClick={() => dispatch(formOpened())} />\n            <div\n                className={classes.theme}\n                onClick={() => dispatch(openThemeForm())}\n            >\n                {displaySelectedThemes()}\n            </div>\n            <div className={classes.itemsContainer}>\n                {listOfItems.map(item => <VocabularyItem itemData={item} />)}\n            </div>\n            <ItemModal isOpen={itemForm.isFormOpen} isAdding={itemForm.isAdding} />\n            <ThemesForm isOpen={isThemeFormOpened} />\n        </div>\n    )\n}\n","/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyMenu.tsx",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/VocabularyItem.tsx",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/ItemModal.tsx",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/items.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/configureStore.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/reducer.js",[],["90","91"],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/themes.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/components/ThemesForm.tsx",[],["92","93"],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveItemList.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/localStorage.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveSentenceThemeList.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/saveWordThemeList.js",[],"/Users/alexandredemoura/Documents/dev/mini-babbel/src/store/middlewares/deleteItemList.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":31,"column":23,"nodeType":"100","messageId":"101","endLine":31,"endColumn":37},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"98","severity":1,"message":"104","line":7,"column":69,"nodeType":"100","messageId":"101","endLine":7,"endColumn":86},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"105"},{"ruleId":"96","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'setSessionInfo' is assigned a value but never used.","Identifier","unusedVar",["107"],["108"],"'intializeItemList' is defined but never used.",["107"],["108"],"no-global-assign","no-unsafe-negation"]